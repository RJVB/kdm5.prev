/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -N -m -p nm-deviceinterface /space/kde/sources/trunk/KDE/kdebase/workspace/solid/networkmanager-0.7/dbus/introspection/nm-device.xml
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef NM_DEVICEINTERFACE_H_1207426519
#define NM_DEVICEINTERFACE_H_1207426519

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.NetworkManager.Device
 */
class OrgFreedesktopNetworkManagerDeviceInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.NetworkManager.Device"; }

public:
    OrgFreedesktopNetworkManagerDeviceInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgFreedesktopNetworkManagerDeviceInterface();

    Q_PROPERTY(uint Capabilities READ capabilities)
    inline uint capabilities() const
    { return qvariant_cast< uint >(internalPropGet("Capabilities")); }

    Q_PROPERTY(uint DeviceType READ deviceType)
    inline uint deviceType() const
    { return qvariant_cast< uint >(internalPropGet("DeviceType")); }

    Q_PROPERTY(QString Driver READ driver)
    inline QString driver() const
    { return qvariant_cast< QString >(internalPropGet("Driver")); }

    Q_PROPERTY(QString Interface READ interface)
    inline QString interface() const
    { return qvariant_cast< QString >(internalPropGet("Interface")); }

    Q_PROPERTY(int Ip4Address READ ip4Address)
    inline int ip4Address() const
    { return qvariant_cast< int >(internalPropGet("Ip4Address")); }

    Q_PROPERTY(QDBusObjectPath Ip4Config READ ip4Config)
    inline QDBusObjectPath ip4Config() const
    { return qvariant_cast< QDBusObjectPath >(internalPropGet("Ip4Config")); }

    Q_PROPERTY(uint State READ state)
    inline uint state() const
    { return qvariant_cast< uint >(internalPropGet("State")); }

    Q_PROPERTY(QString Udi READ udi)
    inline QString udi() const
    { return qvariant_cast< QString >(internalPropGet("Udi")); }

public Q_SLOTS: // METHODS
    inline QDBusReply<void> Deactivate()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("Deactivate"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void StateChanged(uint state);
};

#endif
