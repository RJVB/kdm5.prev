/*
 * This file was generated by dbusidl2cpp version 0.6
 * Command line was: dbusidl2cpp -m -a kscreensaveradaptor -c KScreenSaverAdaptor -i lockeng.h -l SaverEngine -- org.kde.kdesktop.ScreenSaver.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef KSCREENSAVERADAPTOR_H_108221151422193
#define KSCREENSAVERADAPTOR_H_108221151422193

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "lockeng.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.kde.kdesktop.ScreenSaver
 */
class KScreenSaverAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.kdesktop.ScreenSaver")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.kdesktop.ScreenSaver\" >\n"
"    <method name=\"lock\" />\n"
"    <method name=\"save\" />\n"
"    <method name=\"quit\" />\n"
"    <method name=\"isEnabled\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"enable\" >\n"
"      <arg direction=\"in\" type=\"b\" name=\"e\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"isBlanked\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"configure\" />\n"
"    <method name=\"setBlankOnly\" >\n"
"      <arg direction=\"in\" type=\"b\" name=\"blankOnly\" />\n"
"    </method>\n"
"    <method name=\"saverLockReady\" />\n"
"    <signal name=\"screenSaverStarted\" />\n"
"    <signal name=\"screenSaverStopped\" />\n"
"  </interface>\n"
        "")
public:
    KScreenSaverAdaptor(SaverEngine *parent);
    virtual ~KScreenSaverAdaptor();

    inline SaverEngine *parent() const
    { return static_cast<SaverEngine *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void configure();
    bool enable(bool e);
    bool isBlanked();
    bool isEnabled();
    void lock();
    void quit();
    void save();
    void saverLockReady();
    void setBlankOnly(bool blankOnly);
Q_SIGNALS: // SIGNALS
    void screenSaverStarted();
    void screenSaverStopped();
};

#endif
