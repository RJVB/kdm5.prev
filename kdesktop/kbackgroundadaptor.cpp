/*
 * This file was generated by dbusidl2cpp version 0.6
 * Command line was: dbusidl2cpp -m -a kbackgroundadaptor -c KBackgroundAdaptor -i bgmanager.h -l KBackgroundManager -- org.kde.kdesktop.Background.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "kbackgroundadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class KBackgroundAdaptor
 */

KBackgroundAdaptor::KBackgroundAdaptor(KBackgroundManager *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

KBackgroundAdaptor::~KBackgroundAdaptor()
{
    // destructor
}

void KBackgroundAdaptor::changeWallpaper()
{
    // handle method call org.kde.kdesktop.Background.changeWallpaper
    parent()->changeWallpaper();
}

void KBackgroundAdaptor::configure()
{
    // handle method call org.kde.kdesktop.Background.configure
    parent()->configure();
}

QString KBackgroundAdaptor::currentWallpaper(int desk)
{
    // handle method call org.kde.kdesktop.Background.currentWallpaper
    QString out0;
    out0 = parent()->currentWallpaper(desk);
    return out0;
}

bool KBackgroundAdaptor::isCommon()
{
    // handle method call org.kde.kdesktop.Background.isCommon
    bool out0;
    out0 = parent()->isCommon();
    return out0;
}

bool KBackgroundAdaptor::isExport()
{
    // handle method call org.kde.kdesktop.Background.isExport
    bool out0;
    out0 = parent()->isExport();
    return out0;
}

void KBackgroundAdaptor::setBackgroundEnabled(bool enable)
{
    // handle method call org.kde.kdesktop.Background.setBackgroundEnabled
    parent()->setBackgroundEnabled(enable);
}

void KBackgroundAdaptor::setCache(int bLinit, int size)
{
    // handle method call org.kde.kdesktop.Background.setCache
    parent()->setCache(bLinit, size);
}

void KBackgroundAdaptor::setCommon(int common)
{
    // handle method call org.kde.kdesktop.Background.setCommon
    parent()->setCommon(common);
}

void KBackgroundAdaptor::setExport(int xport)
{
    // handle method call org.kde.kdesktop.Background.setExport
    parent()->setExport(xport);
}

void KBackgroundAdaptor::setWallpaper(const QString &wallpaper, int mode)
{
    // handle method call org.kde.kdesktop.Background.setWallpaper
    parent()->setWallpaper(wallpaper, mode);
}

void KBackgroundAdaptor::setWallpaper(int desk, const QString &wallpaper, int mode)
{
    // handle method call org.kde.kdesktop.Background.setWallpaper
    parent()->setWallpaper(desk, wallpaper, mode);
}

QStringList KBackgroundAdaptor::wallpaperFiles(int desk)
{
    // handle method call org.kde.kdesktop.Background.wallpaperFiles
    QStringList out0;
    out0 = parent()->wallpaperFiles(desk);
    return out0;
}

QStringList KBackgroundAdaptor::wallpaperList(int desk)
{
    // handle method call org.kde.kdesktop.Background.wallpaperList
    QStringList out0;
    out0 = parent()->wallpaperList(desk);
    return out0;
}


#include "kbackgroundadaptor.moc"
