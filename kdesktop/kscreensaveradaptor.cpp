/*
 * This file was generated by dbusidl2cpp version 0.6
 * Command line was: dbusidl2cpp -m -a kscreensaveradaptor -c KScreenSaverAdaptor -i lockeng.h -l SaverEngine -- org.kde.kdesktop.ScreenSaver.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "kscreensaveradaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class KScreenSaverAdaptor
 */

KScreenSaverAdaptor::KScreenSaverAdaptor(SaverEngine *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

KScreenSaverAdaptor::~KScreenSaverAdaptor()
{
    // destructor
}

void KScreenSaverAdaptor::configure()
{
    // handle method call org.kde.kdesktop.ScreenSaver.configure
    parent()->configure();
}

bool KScreenSaverAdaptor::enable(bool e)
{
    // handle method call org.kde.kdesktop.ScreenSaver.enable
    bool out0;
    out0 = parent()->enable(e);
    return out0;
}

bool KScreenSaverAdaptor::isBlanked()
{
    // handle method call org.kde.kdesktop.ScreenSaver.isBlanked
    bool out0;
    out0 = parent()->isBlanked();
    return out0;
}

bool KScreenSaverAdaptor::isEnabled()
{
    // handle method call org.kde.kdesktop.ScreenSaver.isEnabled
    bool out0;
    out0 = parent()->isEnabled();
    return out0;
}

void KScreenSaverAdaptor::lock()
{
    // handle method call org.kde.kdesktop.ScreenSaver.lock
    parent()->lock();
}

void KScreenSaverAdaptor::quit()
{
    // handle method call org.kde.kdesktop.ScreenSaver.quit
    parent()->quit();
}

void KScreenSaverAdaptor::save()
{
    // handle method call org.kde.kdesktop.ScreenSaver.save
    parent()->save();
}

void KScreenSaverAdaptor::saverLockReady()
{
    // handle method call org.kde.kdesktop.ScreenSaver.saverLockReady
    parent()->saverLockReady();
}

void KScreenSaverAdaptor::setBlankOnly(bool blankOnly)
{
    // handle method call org.kde.kdesktop.ScreenSaver.setBlankOnly
    parent()->setBlankOnly(blankOnly);
}


#include "kscreensaveradaptor.moc"
